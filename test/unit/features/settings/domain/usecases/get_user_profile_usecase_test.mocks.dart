// Mocks generated by Mockito 5.4.6 from annotations
// in aipet_frontend/test/unit/features/settings/domain/usecases/get_user_profile_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:aipet_frontend/features/settings/domain/entities/user_profile_entity.dart'
    as _i2;
import 'package:aipet_frontend/features/settings/domain/repositories/settings_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserProfileEntity_0 extends _i1.SmartFake
    implements _i2.UserProfileEntity {
  _FakeUserProfileEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppSettingsEntity_1 extends _i1.SmartFake
    implements _i2.AppSettingsEntity {
  _FakeAppSettingsEntity_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDataExportResult_2 extends _i1.SmartFake
    implements _i2.DataExportResult {
  _FakeDataExportResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRepository extends _i1.Mock
    implements _i3.SettingsRepository {
  MockSettingsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserProfileEntity> getUserProfile() =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, []),
            returnValue: _i4.Future<_i2.UserProfileEntity>.value(
              _FakeUserProfileEntity_0(
                this,
                Invocation.method(#getUserProfile, []),
              ),
            ),
          )
          as _i4.Future<_i2.UserProfileEntity>);

  @override
  _i4.Future<bool> updateUserProfile(_i2.UserProfileEntity? profile) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [profile]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> changePassword(_i2.PasswordChangeRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#changePassword, [request]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> deleteAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i2.AppSettingsEntity> getAppSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getAppSettings, []),
            returnValue: _i4.Future<_i2.AppSettingsEntity>.value(
              _FakeAppSettingsEntity_1(
                this,
                Invocation.method(#getAppSettings, []),
              ),
            ),
          )
          as _i4.Future<_i2.AppSettingsEntity>);

  @override
  _i4.Future<bool> saveAppSettings(_i2.AppSettingsEntity? settings) =>
      (super.noSuchMethod(
            Invocation.method(#saveAppSettings, [settings]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i2.DataExportResult> exportAppData() =>
      (super.noSuchMethod(
            Invocation.method(#exportAppData, []),
            returnValue: _i4.Future<_i2.DataExportResult>.value(
              _FakeDataExportResult_2(
                this,
                Invocation.method(#exportAppData, []),
              ),
            ),
          )
          as _i4.Future<_i2.DataExportResult>);

  @override
  _i4.Future<bool> importAppData(String? filePath) =>
      (super.noSuchMethod(
            Invocation.method(#importAppData, [filePath]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> clearAppCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearAppCache, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<int> getCacheSize() =>
      (super.noSuchMethod(
            Invocation.method(#getCacheSize, []),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);
}
